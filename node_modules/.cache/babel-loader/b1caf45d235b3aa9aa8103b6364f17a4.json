{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniepierce/Documents/Course_Work/week_13/Strangers_Things/src/components/singlePostView.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { createMessage, deletePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = _ref => {\n  _s();\n\n  let {\n    postID,\n    token\n  } = _ref;\n  const [message, setMessage] = useState({\n    content: ''\n  }); //we need 3 things to make this request\n  //Post-id, token, message object containing the content of the message\n\n  async function addMessage() {\n    await createMessage({\n      postID,\n      message,\n      token\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: ev => {\n      ev.preventDefault();\n      addMessage();\n      Navigate('/post');\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Message\",\n      onChange: ev => setMessage({\n        content: ev.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        addMessage();\n        Navigate('/posts');\n      },\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendMessage, \"zHW6lT0cCxeljI9xD7SfiFFsqis=\");\n\n_c = SendMessage;\n\nconst SinglePostView = _ref2 => {\n  _s2();\n\n  let {\n    posts,\n    token,\n    navigate,\n    getMe\n  } = _ref2;\n  const [activeMessage, setActiveMessage] = useState(false);\n  const {\n    postID\n  } = useParams();\n\n  if (posts.length) {\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const {\n      title,\n      description,\n      location,\n      price,\n      willDeliver,\n      updatedAt,\n      createdAt,\n      isAuthor\n    } = currentPost;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Will Deliver: \", willDeliver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/posts',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: '/posts',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePost(token, postID),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/posts',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), token && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveMessage(!activeMessage),\n            children: \"Message User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), activeMessage && /*#__PURE__*/_jsxDEV(SendMessage, {\n            token: token,\n            postID: postID,\n            navigate: navigate,\n            getMe: getMe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postStamp\",\n          children: [\"Created At: \", createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postStamp\",\n          children: [\"Updated At: \", updatedAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for Posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s2(SinglePostView, \"AXOOdJjRxXVpOmnfSmaEsXJWi1A=\", false, function () {\n  return [useParams];\n});\n\n_c2 = SinglePostView;\nexport default SinglePostView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"SinglePostView\");","map":{"version":3,"names":["React","useState","Navigate","useParams","createMessage","deletePost","SendMessage","postID","token","message","setMessage","content","addMessage","ev","preventDefault","target","value","SinglePostView","posts","navigate","getMe","activeMessage","setActiveMessage","length","currentPost","filter","post","_id","title","description","location","price","willDeliver","updatedAt","createdAt","isAuthor"],"sources":["/Users/stephaniepierce/Documents/Course_Work/week_13/Strangers_Things/src/components/singlePostView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { createMessage, deletePost } from '../api';\n\nconst SendMessage = ({ postID, token }) => {\n    const [message, setMessage] = useState({content: ''});\n    //we need 3 things to make this request\n    //Post-id, token, message object containing the content of the message\n    async function addMessage() {\n        await createMessage({postID, message, token})\n    }\n    return (\n        <form onSubmit={ (ev) => {\n            ev.preventDefault();\n            addMessage();\n            Navigate('/post');\n        }}>\n            <input\n                type='text'\n                placeholder='Enter Message'\n                onChange={ (ev) => setMessage({content: ev.target.value}) }\n            />\n            <button type='submit' onClick={() =>{\n                addMessage();\n                Navigate('/posts')\n            }}>Send Message</button>\n        </form>\n    )\n}\n\nconst SinglePostView = ({ posts, token, navigate, getMe }) => {\n    const [activeMessage, setActiveMessage] = useState(false);\n\n    const { postID } = useParams();\n    \n    if (posts.length) {\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const {title, description, location, price, willDeliver, updatedAt, createdAt, isAuthor} = currentPost;\n\n    return (\n        <div>\n            <div>\n                <h3>{title}</h3>\n                <p>Description: {description}</p>\n                <p>Price: {price}</p>\n                <p>Location: {location}</p>\n                <p>Will Deliver: {willDeliver}</p>\n            </div>\n            {\n                isAuthor ? (\n                    <>\n                    <Link to={'/posts'}>\n                        <button>\n                            Back\n                        </button>\n                    </Link>\n                    <Link to={'/posts'}>\n                        <button \n                        onClick={() => deletePost(token, postID)}>\n                            Delete\n                        </button>\n                    </Link>\n                    </>\n                ) : (\n                    <>\n                    <Link to={'/posts'}>\n                        <button>\n                            Back\n                        </button>\n                    </Link>\n                    { token &&\n                    <>\n                    <button \n                    onClick={() => setActiveMessage(!activeMessage)}>\n                        Message User\n                    </button>\n                    {\n                        activeMessage && \n                        <SendMessage token={token} \n                        postID={postID} \n                        navigate={navigate} \n                        getMe={getMe} />\n                    }\n                    </>\n                    }\n                    </>\n                )\n            }\n            <div>\n                <p className='postStamp'>Created At: {createdAt}</p>\n                <p className='postStamp'>Updated At: {updatedAt}</p>\n            </div>\n        </div>\n    )\n} else {\n    return (\n        <h2>Waiting for Posts...</h2>\n    )\n}\n}\n\nexport default SinglePostView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}