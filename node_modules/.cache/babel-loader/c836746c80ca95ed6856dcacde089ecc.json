{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniepierce/Documents/Course_Work/week_13/Strangers_Things/src/components/editPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliever\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDesc] = useState(description);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      location: newLocation,\n      price: newPrice,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: ev => {\n      ev.preventDefault();\n      editPost();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: title,\n      onChange: ev => setNewTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: description,\n      onChange: ev => setNewDesc(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: location,\n      onChange: ev => setNewLocation(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: price,\n      onChange: ev => setNewPrice(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: newWillDeliver,\n      onChange: ev => setNewWillDeliver(ev.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"4pnDRmpzdoMl3NGR2MATx2Kmag0=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","updatePost","EditPost","posts","token","postID","currentPost","filter","post","_id","title","description","location","price","willDeliever","newTitle","setNewTitle","newDescription","setNewDesc","newLocation","setNewLocation","newPrice","setNewPrice","newWillDeliver","setNewWillDeliver","willDeliver","editPost","updatedPost","ev","preventDefault","target","value","checked"],"sources":["/Users/stephaniepierce/Documents/Course_Work/week_13/Strangers_Things/src/components/editPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../api';\n\nconst EditPost = ({ posts, token }) => {\n    const { postID } = useParams();\n\n    const [currentPost] = posts.filter(post => post._id === postID);\n\n    const {title, description, location, price, willDeliever} = currentPost;\n\n    const [newTitle, setNewTitle] = useState(title);\n    const [newDescription, setNewDesc] = useState(description);\n    const [newLocation, setNewLocation] = useState(location);\n    const [newPrice, setNewPrice] = useState(price);\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n    async function editPost() {\n        const updatedPost = {\n            token: token,\n            title: newTitle,\n            description: newDescription,\n            location: newLocation,\n            price: newPrice,\n            willDeliver: newWillDeliver,\n            _id: postID\n        }\n        await updatePost (updatedPost)\n    }\n\n    return (\n        <form onSubmit={ (ev) => {\n            ev.preventDefault();\n            editPost();\n        }}>\n            <input\n                type='text'\n                placeholder={title}\n                onChange={(ev) => setNewTitle(ev.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={description}\n                onChange={(ev) => setNewDesc(ev.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={location}\n                onChange={(ev) => setNewLocation(ev.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={price}\n                onChange={(ev) => setNewPrice(ev.target.value)}\n            />\n            <input\n                type='checkbox'\n                checked={newWillDeliver}\n                onChange={(ev) => setNewWillDeliver(ev.target.checked)}\n            />\n            <button type='submit'>Edit Post</button>\n        </form>\n    )\n}\n\nexport default EditPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,MAAMC,QAAQ,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC,KAAF;IAASC;EAAT,CAAqB;EACnC,MAAM;IAAEC;EAAF,IAAaL,SAAS,EAA5B;EAEA,MAAM,CAACM,WAAD,IAAgBH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAlC,CAAtB;EAEA,MAAM;IAACK,KAAD;IAAQC,WAAR;IAAqBC,QAArB;IAA+BC,KAA/B;IAAsCC;EAAtC,IAAsDR,WAA5D;EAEA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACW,KAAD,CAAxC;EACA,MAAM,CAACO,cAAD,EAAiBC,UAAjB,IAA+BnB,QAAQ,CAACY,WAAD,CAA7C;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAACa,QAAD,CAA9C;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACc,KAAD,CAAxC;EACA,MAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC0B,WAAD,CAApD;;EAEA,eAAeC,QAAf,GAA0B;IACtB,MAAMC,WAAW,GAAG;MAChBvB,KAAK,EAAEA,KADS;MAEhBM,KAAK,EAAEK,QAFS;MAGhBJ,WAAW,EAAEM,cAHG;MAIhBL,QAAQ,EAAEO,WAJM;MAKhBN,KAAK,EAAEQ,QALS;MAMhBI,WAAW,EAAEF,cANG;MAOhBd,GAAG,EAAEJ;IAPW,CAApB;IASA,MAAMJ,UAAU,CAAE0B,WAAF,CAAhB;EACH;;EAED,oBACI;IAAM,QAAQ,EAAIC,EAAD,IAAQ;MACrBA,EAAE,CAACC,cAAH;MACAH,QAAQ;IACX,CAHD;IAAA,wBAII;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAEhB,KAFjB;MAGI,QAAQ,EAAGkB,EAAD,IAAQZ,WAAW,CAACY,EAAE,CAACE,MAAH,CAAUC,KAAX;IAHjC;MAAA;MAAA;MAAA;IAAA,QAJJ,eASI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAEpB,WAFjB;MAGI,QAAQ,EAAGiB,EAAD,IAAQV,UAAU,CAACU,EAAE,CAACE,MAAH,CAAUC,KAAX;IAHhC;MAAA;MAAA;MAAA;IAAA,QATJ,eAcI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAEnB,QAFjB;MAGI,QAAQ,EAAGgB,EAAD,IAAQR,cAAc,CAACQ,EAAE,CAACE,MAAH,CAAUC,KAAX;IAHpC;MAAA;MAAA;MAAA;IAAA,QAdJ,eAmBI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAElB,KAFjB;MAGI,QAAQ,EAAGe,EAAD,IAAQN,WAAW,CAACM,EAAE,CAACE,MAAH,CAAUC,KAAX;IAHjC;MAAA;MAAA;MAAA;IAAA,QAnBJ,eAwBI;MACI,IAAI,EAAC,UADT;MAEI,OAAO,EAAER,cAFb;MAGI,QAAQ,EAAGK,EAAD,IAAQJ,iBAAiB,CAACI,EAAE,CAACE,MAAH,CAAUE,OAAX;IAHvC;MAAA;MAAA;MAAA;IAAA,QAxBJ,eA6BI;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH,CA3DD;;GAAM9B,Q;UACiBF,S;;;KADjBE,Q;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}